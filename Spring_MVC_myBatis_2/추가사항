		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jslsolucoes/ojdbc6 -->
		<dependency>
		    <groupId>com.jslsolucoes</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.1.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
		Spring_MVC_myBatis_2
1. 디펜던시 추가 , 업데이트
2. controller, serivce, dao, 후 필요한 객체 @Autowired
   dto 작성
3. jdbc.properties작성
   Mapper 준비 
4. root-context.xml 
   jdbc.properties파일일기, 4가지정보 이용datasource생성, tx 등록, tx 어노테이션활성화
   SqlSessionFactory 생성(Mapper, dto등록), SqlSessionTemplate 생성
5. servlet-context.xml
   component-scan 이용  - controller, serive,repository 생성
6. controller 
   /list 주소 처리 => dao.list 함수 => DeptMapper.list 이용전체 선택
   결과를 Model에 'list'로 저장 , list.jsp 이동
7. list.jsp 에서 데이터 전체 출력
		